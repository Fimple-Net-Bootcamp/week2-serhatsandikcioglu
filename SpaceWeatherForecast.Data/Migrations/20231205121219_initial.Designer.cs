// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SpaceWeatherForecast.Data.DataBase;

#nullable disable

namespace SpaceWeatherForecast.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231205121219_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SpaceWeatherForecast.Data.Entities.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Temprature")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("SpaceWeatherForecast.Data.Entities.Satellite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlanetId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Temprature")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("PlanetId");

                    b.ToTable("Satellites");
                });

            modelBuilder.Entity("SpaceWeatherForecast.Data.Entities.Satellite", b =>
                {
                    b.HasOne("SpaceWeatherForecast.Data.Entities.Planet", null)
                        .WithMany("Satellites")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpaceWeatherForecast.Data.Entities.Planet", b =>
                {
                    b.Navigation("Satellites");
                });
#pragma warning restore 612, 618
        }
    }
}
